/*
Generated by UnityTwine on 5/1/2016 10:20:29 AM
https://github.com/daterre/UnityTwine
*/
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using UnityTwine;

public class test: TwineStory
{
	public TwineVar sociability;
	public TwineVar suspicion;
	public TwineVar fail;
	public TwineVar metFriend;
	public override TwineVar this[string name] {
		get {
			switch(name)
			{
				case "sociability": return sociability;
				case "suspicion": return suspicion;
				case "fail": return fail;
				case "metFriend": return metFriend;
				default: throw new KeyNotFoundException(string.Format("There is no variable with the name '{0}'.", name));
			}
		}
		set {
			switch(name) {
				case "sociability": sociability = value; break;
				case "suspicion": suspicion = value; break;
				case "fail": fail = value; break;
				case "metFriend": metFriend = value; break;
				default: throw new KeyNotFoundException(string.Format("There is no variable with the name '{0}'.", name));
			}
		}
	}


	void Awake() {
		base.Init();
		passageInit_0();
		passageInit_1();
		passageInit_2();
		passageInit_3();
		passageInit_4();
		passageInit_5();
		passageInit_6();
		passageInit_7();
		passageInit_8();
		passageInit_9();
		passageInit_10();
		passageInit_11();
		passageInit_12();
		passageInit_13();
		passageInit_14();
		passageInit_15();
		passageInit_16();
		passageInit_17();
		passageInit_18();
		passageInit_19();
		passageInit_20();
		passageInit_21();
		passageInit_22();
		passageInit_23();
		passageInit_24();
		passageInit_25();
		passageInit_26();
		passageInit_27();
		passageInit_28();
		passageInit_29();
		passageInit_30();
		passageInit_31();
		passageInit_32();
		passageInit_33();
		passageInit_34();
		passageInit_35();
		passageInit_36();
		passageInit_37();
		passageInit_38();
	}
    
	// .............
	// #0: StoryTitle

	void passageInit_0()
	{
		this.Passages["StoryTitle"] = new TwinePassage("StoryTitle", new string[]{  }, passageExecute_0);
	}

	IEnumerable<TwineOutput> passageExecute_0()
	{
		yield return new TwineText(@"New Science");	
	}
    
	// .............
	// #1: Beginning

	void passageInit_1()
	{
		this.Passages["Beginning"] = new TwinePassage("Beginning", new string[]{  }, passageExecute_1);
	}

	IEnumerable<TwineOutput> passageExecute_1()
	{
		yield return new TwineText(@"Recently, Aya's pet Oyo died of an illness. She is still sad, but life goes on./A while later, she feels a bit better, but still shows up (drunk?) in her lab in the middle of the night./She decided to do experiments on Oyo because she feels like it's the right thing to do to make him still important to her, even after his death./There was an old project she was working on a long time ago, but which she completely abandoned. She gets its data back, and continues a bit, but on Oyo./At some point she notices that holy shit she's about to get some results. ");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Question", @"Question", @"Question", null, null);
		sociability = 0;
		suspicion = 0;
		fail = 0;
		metFriend = 0;	
	}
    
	// .............
	// #2: 10V

	void passageInit_2()
	{
		this.Passages["10V"] = new TwinePassage("10V", new string[]{  }, passageExecute_2);
	}

	IEnumerable<TwineOutput> passageExecute_2()
	{
		yield return new TwineText(@"Breakthrough! Oyo starts moving. Soon, he's back to life, but completely disoriented./Aya hurriedly grabs some water and food (there's always some in her lab for when she sneaks him in) and gives him./Aya thinks about it : all the implications of it, the possible uses, how ""HOLY SHIT I FOUND THAT WHAT DO I DO""/Her best friend calls her to ask for news, she has to choose whether she tells her or not.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Think about it on her own", @"Think about it on her own", @"Think about it on her own", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Ask her best friend for help", @"Ask her best friend for help", @"Ask her best friend for help", null, null);	
	}
    
	// .............
	// #3: Think about it on her own

	void passageInit_3()
	{
		this.Passages["Think about it on her own"] = new TwinePassage("Think about it on her own", new string[]{  }, passageExecute_3);
	}

	IEnumerable<TwineOutput> passageExecute_3()
	{
		sociability = sociability - 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"She thinks it's a bad idea to share it with anyone for now, so she doesn't say anything and gives an excuse to not go out that evening./She goes home and sets up Oyo comfortably.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Day two", @"Day two", @"Day two", null, null);	
	}
    
	// .............
	// #4: Ask her best friend for help

	void passageInit_4()
	{
		this.Passages["Ask her best friend for help"] = new TwinePassage("Ask her best friend for help", new string[]{  }, passageExecute_4);
	}

	IEnumerable<TwineOutput> passageExecute_4()
	{
		sociability = sociability + 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"She says she found something huge, and she doesn't know what to do and oh my god everything is overwhelming right now./Best friend calms her down, invites her to eat somewhere, and they spend the evening talking about it.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Day two", @"Day two", @"Day two", null, null);	
	}
    
	// .............
	// #5: Day two

	void passageInit_5()
	{
		this.Passages["Day two"] = new TwinePassage("Day two", new string[]{  }, passageExecute_5);
	}

	IEnumerable<TwineOutput> passageExecute_5()
	{
		yield return new TwineText(@"Aya has to make sure that what she did actually works and wasn't just a coincidence./It means more tests on dead things, and in particular, she will have to test it on a human body at some point.");
		yield return new TwineText(@"");
		if (sociability > 0) { yield return new TwineLink(@"""Do the thing with friend""", @"""Do the thing with friend""", @"""Do the thing with friend""", null, null);} 
		if (sociability <= 0) { yield return new TwineLink(@"""Do the thing alone""", @"""Do the thing alone""", @"""Do the thing alone""", null, null);} 	
	}
    
	// .............
	// #6: Do the thing with friend

	void passageInit_6()
	{
		this.Passages["Do the thing with friend"] = new TwinePassage("Do the thing with friend", new string[]{  }, passageExecute_6);
	}

	IEnumerable<TwineOutput> passageExecute_6()
	{
		sociability = sociability + 1;
		suspicion = suspicion + 1;
		metFriend = 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"She decides that she should ask her friend for help in order to do the testing so she can confirm she's not crazy./She calls her, and she comes over./Science happens./They do tests on rats, no problem, they do tests on chimpanzees, they have to fix the dosage but eventually it works./At some point boss shows up. They have to explain what they're doing.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Tell it's for a personal project.", @"Tell it's for a personal project.", @"Tell it's for a personal project.", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Try to find an excuse.", @"Try to find an excuse.", @"Try to find an excuse.", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Let friend handle.", @"Let friend handle.", @"Let friend handle.", null, null);	
	}
    
	// .............
	// #7: Do the thing alone

	void passageInit_7()
	{
		this.Passages["Do the thing alone"] = new TwinePassage("Do the thing alone", new string[]{  }, passageExecute_7);
	}

	IEnumerable<TwineOutput> passageExecute_7()
	{
		metFriend = -1;
		yield return new TwineText(@"");
		yield return new TwineText(@"She decides that it would be better if she did the testing alone because it's a pretty dark thing to do./She tests on other small animals first to make sure that it works, which it does./She then asks for one chimpanzee, and see that the dosage isn't strong enough./At some point, boss shows up, but she's so stressed about staying hidden that she manages to hide the body before he enters the room and she pretends to work on whatever it is she's supposed to be working on.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Go to next step", @"Go to next step", @"Go to next step", null, null);	
	}
    
	// .............
	// #8: 1V

	void passageInit_8()
	{
		this.Passages["1V"] = new TwinePassage("1V", new string[]{  }, passageExecute_8);
	}

	IEnumerable<TwineOutput> passageExecute_8()
	{
		fail = fail + 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"She tries that, but nothing happens.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Question", @"Question", @"Question", null, null);	
	}
    
	// .............
	// #9: 100V

	void passageInit_9()
	{
		this.Passages["100V"] = new TwinePassage("100V", new string[]{  }, passageExecute_9);
	}

	IEnumerable<TwineOutput> passageExecute_9()
	{
		fail = fail + 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"She gets a flashback from one fateful class back when she was in college where her lab partner fried a mouse, and she decides that she should definitely not do that.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Question", @"Question", @"Question", null, null);	
	}
    
	// .............
	// #10: Question

	void passageInit_10()
	{
		this.Passages["Question"] = new TwinePassage("Question", new string[]{  }, passageExecute_10);
	}

	IEnumerable<TwineOutput> passageExecute_10()
	{
		yield return new TwineText(@"Currently, he was injected with a solution she had worked on, now she has to apply current to him./She should make sure that it's sufficient to be working, but not too much so she doesn't fry him.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"1V", @"1V", @"1V", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"10V", @"10V", @"10V", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"100V", @"100V", @"100V", null, null);	
	}
    
	// .............
	// #11: Go to next step

	void passageInit_11()
	{
		this.Passages["Go to next step"] = new TwinePassage("Go to next step", new string[]{  }, passageExecute_11);
	}

	IEnumerable<TwineOutput> passageExecute_11()
	{
		yield return new TwineText(@"Now she has to find a human body, which is way harder to get than just ask another lab for a spare chimpanzee./She asks around, and learns that she has to wait for the body of a new donor to come to the lab.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Ask around", @"Ask around", @"Ask around", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Sneak in the dead storage", @"Sneak in the dead storage", @"Sneak in the dead storage", null, null);	
	}
    
	// .............
	// #12: Sneak in the dead storage

	void passageInit_12()
	{
		this.Passages["Sneak in the dead storage"] = new TwinePassage("Sneak in the dead storage", new string[]{  }, passageExecute_12);
	}

	IEnumerable<TwineOutput> passageExecute_12()
	{
		sociability = sociability - 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"She does that in the middle of the night.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Test on human", @"Test on human", @"Test on human", null, null);	
	}
    
	// .............
	// #13: Ask around

	void passageInit_13()
	{
		this.Passages["Ask around"] = new TwinePassage("Ask around", new string[]{  }, passageExecute_13);
	}

	IEnumerable<TwineOutput> passageExecute_13()
	{
		sociability = sociability + 1;
		suspicion = suspicion + 1;
		yield return new TwineText(@"");
		if (sociability > 1) { yield return new TwineText(@"She asks around the lab, and she does that with enough skill so it works and she manages to meet a teacher who lets her have a body./She just has to do that in the evening, after classes.");
		yield return new TwineLink(@"""Test on human""", @"""Test on human""", @"""Test on human""", null, null);} 
		if (sociability <= 0) { yield return new TwineText(@"She asks around, but no one really know or want to let her have a body, so she has to do that by herself.");
		yield return new TwineLink(@"""Sneak in the dead storage""", @"""Sneak in the dead storage""", @"""Sneak in the dead storage""", null, null);} 	
	}
    
	// .............
	// #14: Test on human

	void passageInit_14()
	{
		this.Passages["Test on human"] = new TwinePassage("Test on human", new string[]{  }, passageExecute_14);
	}

	IEnumerable<TwineOutput> passageExecute_14()
	{
		yield return new TwineText(@"She does her test on a human body, finally./However, the question is : what dosage?");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Same as for chimpanzee", @"Same as for chimpanzee", @"Same as for chimpanzee", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Less than chimpanzee", @"Less than chimpanzee", @"Less than chimpanzee", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"More than chimpanzee", @"More than chimpanzee", @"More than chimpanzee", null, null);	
	}
    
	// .............
	// #15: Same as for chimpanzee

	void passageInit_15()
	{
		this.Passages["Same as for chimpanzee"] = new TwinePassage("Same as for chimpanzee", new string[]{  }, passageExecute_15);
	}

	IEnumerable<TwineOutput> passageExecute_15()
	{
		fail = fail + 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"The body jerks a bit, but nothing happens.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Test on human", @"Test on human", @"Test on human", null, null);	
	}
    
	// .............
	// #16: Less than chimpanzee

	void passageInit_16()
	{
		this.Passages["Less than chimpanzee"] = new TwinePassage("Less than chimpanzee", new string[]{  }, passageExecute_16);
	}

	IEnumerable<TwineOutput> passageExecute_16()
	{
		fail = fail + 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"Nothing happens.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Test on human", @"Test on human", @"Test on human", null, null);	
	}
    
	// .............
	// #17: More than chimpanzee

	void passageInit_17()
	{
		this.Passages["More than chimpanzee"] = new TwinePassage("More than chimpanzee", new string[]{  }, passageExecute_17);
	}

	IEnumerable<TwineOutput> passageExecute_17()
	{
		yield return new TwineText(@"Victory! The person comes back to life./They look a bit sick and disoriented, but alive. They have no idea what happened from the moment of their death./Now she has to do something with that person. Especially since he's starting to ask questions.");
		if (fail > 3) { yield return new TwineLink(@"""Something's wrong""", @"""Something's wrong""", @"""Something's wrong""", null, null);} 
		yield return new TwineText(@"");
		if (fail <= 3) { 
		yield return new TwineLink(@"""Explain the situation""", @"""Explain the situation""", @"""Explain the situation""", null, null);
		yield return new TwineLink(@"""Lie""", @"""Lie""", @"""Lie""", null, null);
		yield return new TwineLink(@"""Knock him out""", @"""Knock him out""", @"""Knock him out""", null, null);
		} 
		yield return new TwineText(@"");
		yield return new TwineText(@"END OF PART 1");
		yield return new TwineText(@"sociability - ");yield return new TwineText(sociability);
		yield return new TwineText(@"suspicion - ");yield return new TwineText(suspicion);
		yield return new TwineText(@"fail - ");yield return new TwineText(fail);	
	}
    
	// .............
	// #18: Go to boss's office

	void passageInit_18()
	{
		this.Passages["Go to boss's office"] = new TwinePassage("Go to boss's office", new string[]{  }, passageExecute_18);
	}

	IEnumerable<TwineOutput> passageExecute_18()
	{
		yield return new TwineText(@"Boss asks what the hell is Aya doing, and blah blah blah public image blah blah press conference blah blah./Aya has no choice but to tell the truth and explains the whole thing. Boss is like ""Holy. Shit.""/Aya is sent home for the day and instructed not to get out until further notice.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Go home->Go home 2", @"Go home->Go home 2", @"Go home->Go home 2", null, null);	
	}
    
	// .............
	// #19: Go home

	void passageInit_19()
	{
		this.Passages["Go home"] = new TwinePassage("Go home", new string[]{  }, passageExecute_19);
	}

	IEnumerable<TwineOutput> passageExecute_19()
	{
		yield return new TwineText(@"Aya has no idea how everything worked, but it did./Now she has to think of what to do.");	
	}
    
	// .............
	// #20: Tell it's for a personal project.

	void passageInit_20()
	{
		this.Passages["Tell it's for a personal project."] = new TwinePassage("Tell it's for a personal project.", new string[]{  }, passageExecute_20);
	}

	IEnumerable<TwineOutput> passageExecute_20()
	{
		yield return new TwineText(@"Boss says you shouldn't be working on personal things during work time and just leaves you there.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Go to next step", @"Go to next step", @"Go to next step", null, null);	
	}
    
	// .............
	// #21: Try to find an excuse.

	void passageInit_21()
	{
		this.Passages["Try to find an excuse."] = new TwinePassage("Try to find an excuse.", new string[]{  }, passageExecute_21);
	}

	IEnumerable<TwineOutput> passageExecute_21()
	{
		suspicion = suspicion + 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"You try to find an excuse but you're pretty incoherent. Boss is annoyed and just leaves after urging you to go back to your actual work.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Go to next step", @"Go to next step", @"Go to next step", null, null);	
	}
    
	// .............
	// #22: Let friend handle.

	void passageInit_22()
	{
		this.Passages["Let friend handle."] = new TwinePassage("Let friend handle.", new string[]{  }, passageExecute_22);
	}

	IEnumerable<TwineOutput> passageExecute_22()
	{
		suspicion = suspicion - 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"You look expectantly at your friend, who explains that another scientist asked you to keep these animals for a while because of security concern, and launches into a whole monologue about putting security first. That seems to work, but you are still urged to go back to work.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Go to next step", @"Go to next step", @"Go to next step", null, null);	
	}
    
	// .............
	// #23: Go home 2

	void passageInit_23()
	{
		this.Passages["Go home 2"] = new TwinePassage("Go home 2", new string[]{  }, passageExecute_23);
	}

	IEnumerable<TwineOutput> passageExecute_23()
	{
		yield return new TwineText(@"Aya goes home and is like ""... crap.""/Next day, her boss calls her and tells her to come as soon as she can./When in his office, he explains her that he wants to supervise everything she's doing and work with her to make her discovery useful.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Accept", @"Accept", @"Accept", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Hell no", @"Hell no", @"Hell no", null, null);	
	}
    
	// .............
	// #24: Accept

	void passageInit_24()
	{
		this.Passages["Accept"] = new TwinePassage("Accept", new string[]{  }, passageExecute_24);
	}

	IEnumerable<TwineOutput> passageExecute_24()
	{
		yield return new TwineText(@"Aya is pretty sure she doesn't have a choice, so she accepts. Besides, how bad can it be, it's not like her thing could be used as a weapon anyway./Boss is happy, he says she's going to have a whole team working with her to improve her solution, and that he will call the press right away, and she will probably have to do interviews yadda yadda.");	
	}
    
	// .............
	// #25: Hell no

	void passageInit_25()
	{
		this.Passages["Hell no"] = new TwinePassage("Hell no", new string[]{  }, passageExecute_25);
	}

	IEnumerable<TwineOutput> passageExecute_25()
	{
		yield return new TwineText(@"There's no way she's doing that. She tries explaining that anyway, she used the last part of the solution she made and she didn't think it would work so she didn't bother taking notes of it so now it's gone forever./Boss is having none of this. He asks that she still keep working on it and try to find it back by remembering what she did. He can provide help and resources if needed.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Go to new lab", @"Go to new lab", @"Go to new lab", null, null);	
	}
    
	// .............
	// #26: Go to new lab

	void passageInit_26()
	{
		this.Passages["Go to new lab"] = new TwinePassage("Go to new lab", new string[]{  }, passageExecute_26);
	}

	IEnumerable<TwineOutput> passageExecute_26()
	{
		yield return new TwineText(@"Boss accompanies her to her new lab and says that everything is already settled with her previous and new team./There, she meets some people she doesn't know. They tell her that they will help her remember, and that they're already working on the dude she revived to try and recreate the solution she made.");	
	}
    
	// .............
	// #27: Explain the situation

	void passageInit_27()
	{
		this.Passages["Explain the situation"] = new TwinePassage("Explain the situation", new string[]{  }, passageExecute_27);
	}

	IEnumerable<TwineOutput> passageExecute_27()
	{
		yield return new TwineText(@"Aya tries explaining the situation to the guy. He has trouble believing it.");
		yield return new TwineText(@"");
		if (sociability > 0) { yield return new TwineText(@"But she's convincing enough that he believes her.");
		yield return new TwineLink(@"""More talking""", @"""More talking""", @"""More talking""", null, null);} 
		if (sociability <= 0) { 
		yield return new TwineLink(@"""The man is freaking out""", @"""The man is freaking out""", @"""The man is freaking out""", null, null);} 
		yield return new TwineText(@"");
		sociability = sociability + 1;	
	}
    
	// .............
	// #28: Lie

	void passageInit_28()
	{
		this.Passages["Lie"] = new TwinePassage("Lie", new string[]{  }, passageExecute_28);
	}

	IEnumerable<TwineOutput> passageExecute_28()
	{
		yield return new TwineText(@"Aya decides to lie about the situation, telling the man that there was an error of diagnostic and that he just woke up from his coma thanks to some extreme science.");
		yield return new TwineText(@"");
		suspicion = suspicion - 1;	
	}
    
	// .............
	// #29: Knock him out

	void passageInit_29()
	{
		this.Passages["Knock him out"] = new TwinePassage("Knock him out", new string[]{  }, passageExecute_29);
	}

	IEnumerable<TwineOutput> passageExecute_29()
	{
		yield return new TwineText(@"Aya decides that it's safer if he doesn't get out of there and start speaking and asking questions. She takes a heavy thing and hits him on the back of the head.");
		yield return new TwineText(@"");
		sociability = sociability - 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"What to do with the ""body?""");	
	}
    
	// .............
	// #30: More talking

	void passageInit_30()
	{
		this.Passages["More talking"] = new TwinePassage("More talking", new string[]{  }, passageExecute_30);
	}

	IEnumerable<TwineOutput> passageExecute_30()
	{
		yield return new TwineText(@"Now they have to decide what to do, possibly together. Guy proposes his help because he's not too bad at solving problems./What to do next?");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Tell someone else about it.", @"Tell someone else about it.", @"Tell someone else about it.", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Keep it your secret forever.", @"Keep it your secret forever.", @"Keep it your secret forever.", null, null);	
	}
    
	// .............
	// #31: Tell someone else about it.

	void passageInit_31()
	{
		this.Passages["Tell someone else about it."] = new TwinePassage("Tell someone else about it.", new string[]{  }, passageExecute_31);
	}

	IEnumerable<TwineOutput> passageExecute_31()
	{
		yield return new TwineText(@"They speak for a while, and decide to tell best friend about it.");
		yield return new TwineText(@"");
		if (metFriend > 0) { yield return new TwineText(@"Next day, Aya calls her, explaining how the experiment went and that it worked and she now was in presence of the first human to ever be brought back to life.");} 
		if (metFriend < 0) { yield return new TwineText(@"Aya calls her friend, and has to explain everything to her but in the end she gets to it./Friend has to come all the way to her house to see the death certificate with her own eyes to believe her, and finally does.");} 	
	}
    
	// .............
	// #32: Keep it your secret forever.

	void passageInit_32()
	{
		this.Passages["Keep it your secret forever."] = new TwinePassage("Keep it your secret forever.", new string[]{  }, passageExecute_32);
	}

	IEnumerable<TwineOutput> passageExecute_32()
	{
		yield return new TwineText(@"Aya suggests that they shouldn't tell anyone about it and keep it to themselves. But what to do with it?");
		yield return new TwineText(@"");
		yield return new TwineLink(@"[End] Destroy the solution and all the notes.", @"[End] Destroy the solution and all the notes.", @"[End] Destroy the solution and all the notes.", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Keep it for themselves, but use it for good reasons.", @"Keep it for themselves, but use it for good reasons.", @"Keep it for themselves, but use it for good reasons.", null, null);	
	}
    
	// .............
	// #33: Keep it for themselves, but use it for good reasons.

	void passageInit_33()
	{
		this.Passages["Keep it for themselves, but use it for good reasons."] = new TwinePassage("Keep it for themselves, but use it for good reasons.", new string[]{  }, passageExecute_33);
	}

	IEnumerable<TwineOutput> passageExecute_33()
	{
		yield return new TwineText(@"");	
	}
    
	// .............
	// #34: The man is freaking out

	void passageInit_34()
	{
		this.Passages["The man is freaking out"] = new TwinePassage("The man is freaking out", new string[]{  }, passageExecute_34);
	}

	IEnumerable<TwineOutput> passageExecute_34()
	{
		yield return new TwineText(@"He's like HOLY SHIT WTF HAPPENED TO ME PLEASE LET ME OUT./He's getting violent and threatening Aya.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"Try to speak to him", @"Try to speak to him", @"Try to speak to him", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Use the force", @"Use the force", @"Use the force", null, null);	
	}
    
	// .............
	// #35: Try to speak to him

	void passageInit_35()
	{
		this.Passages["Try to speak to him"] = new TwinePassage("Try to speak to him", new string[]{  }, passageExecute_35);
	}

	IEnumerable<TwineOutput> passageExecute_35()
	{
		sociability = sociability + 1;
		suspicion = suspicion - 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"You get back a little and try to speak to him, tell him it's going to be ok, yadda yadda.");	
	}
    
	// .............
	// #36: Use the force

	void passageInit_36()
	{
		this.Passages["Use the force"] = new TwinePassage("Use the force", new string[]{  }, passageExecute_36);
	}

	IEnumerable<TwineOutput> passageExecute_36()
	{
		sociability = sociability - 1;
		suspicion = suspicion + 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"She tries to knock him out. Considering he's bigger and stronger than her, that doesn't work much, so he pushes her down and run away./She tries to go after him but loses him quickly.");
		yield return new TwineText(@"");
		yield return new TwineLink(@"There's not much more to do, go home", @"There's not much more to do, go home", @"There's not much more to do, go home", null, null);
		yield return new TwineText(@"");
		yield return new TwineLink(@"Go tell boss about it", @"Go tell boss about it", @"Go tell boss about it", null, null);	
	}
    
	// .............
	// #37: There's not much more to do, go home

	void passageInit_37()
	{
		this.Passages["There's not much more to do, go home"] = new TwinePassage("There's not much more to do, go home", new string[]{  }, passageExecute_37);
	}

	IEnumerable<TwineOutput> passageExecute_37()
	{
		suspicion = suspicion - 1;
		yield return new TwineText(@"");
		yield return new TwineText(@"She can't catch up with him, and doesn't know what to do, so going home is the best solution.");	
	}
    
	// .............
	// #38: Go tell boss about it

	void passageInit_38()
	{
		this.Passages["Go tell boss about it"] = new TwinePassage("Go tell boss about it", new string[]{  }, passageExecute_38);
	}

	IEnumerable<TwineOutput> passageExecute_38()
	{
		yield return new TwineText(@"Aya decides it's safer to go and tell her boss about it since there's a crazy naked man running around in the facility, which is probably not a good thing.");	
	}

}